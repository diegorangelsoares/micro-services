version: '3'
services:

  rabbit-mq:
    image: rabbit-mq:3.8.14-management
    container_name: rabbit-mq
    hostname: rabbit-mq
    networks: 
      - microservices-network 
    ports:
      - "5672:5672"
      - "15672:15672"

  zipkin-server:
    image: openzipkin/zipkin:2.23.2
    container_name: 'zipkin-server'
    ports:
      - 9411:9411
    depends_on:
      - rabbit-mq
    environment:
      RABBIT_URI: anqp://guest:guest@rabbit-mq:5672
    networks:
      - microservices-network

  postgres-cambio:
    image: postgres:10
    container_name: postgres-cambio
    hostname: postgres-cambio
    environment:
      POSTGRES_DB: "cambio_service"
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
      TZ: "GMT"
    volumes:
      - /docker/postgres/cambio_service:/var/lib/postgresql/data
    networks: 
      - microservices-network 
    ports:
      - "5438:5438"

  postgres-book:
    image: postgres:10
    container_name: book-cambio
    hostname: book-cambio
    environment:
      POSTGRES_DB: "book_service"
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
      TZ: "GMT"
    volumes:
      - /docker/postgres/book_service:/var/lib/postgresql/data
    networks: 
      - microservices-network 
    ports:
      - "5439:5439"

  naming-service:
    image: rangeldiego/naming-service:0.0.1-SNAPSHOT
    container_name: 'naming-service'
    ports:
      - 8761:8761
    networks:
      - microservices-network

  cambio-service:
    image: rangeldiego/cambio-service
    container_name: 'cambio-service'
    restart: always
    build: 
      context: .
      dockerfile: 05-cambio-service/Dockerfile
    environment:
      TZ: America/Sao_Paulo
      EUREKA.CLIENTE.SERVICEURL.DEFAULTZONE: http://naming-service:8761/eureka
      SPRING.ZIPKIN.BASEURL: http://zipkin-server:9411/
      RABBIT_URI: anqp://guest:guest@rabbit-mq:5672
      SPRING_RABBITMQ_HOST: rabbit-mq
      SPRING_ZIPKIN_SENDER_TYPE: rabbit
      SPRING.DATASOURCE.URL: jdbc:postgresql://postgres-cambio:5438/cambio_service
      SPRING.DATASOURCE.USERNAME: postgres
      SPRING.DATASOURCE.PASSWORD: postgres
      SPRING.FLYWAY.URL: jdbc:postgresql://postgres-cambio:5438/cambio_service
      SPRING.FLYWAY.USER: postgres
      SPRING.FLYWAY.PASSWORD: postgres
    ports:
      - 8000:8000
    depends_on:
      - naming-server
      - postgres-cambio
      - rabbit-mq
    networks:
      - microservices-network

  book-service:
    image: rangeldiego/book-service
    container_name: 'book-service'
    restart: always
    build: 
      context: .
      dockerfile: 05-book-service/Dockerfile
    environment:
      TZ: America/Sao_Paulo
      EUREKA.CLIENTE.SERVICEURL.DEFAULTZONE: http://naming-service:8761/eureka
      SPRING.ZIPKIN.BASEURL: http://zipkin-server:9411/
      RABBIT_URI: anqp://guest:guest@rabbit-mq:5672
      SPRING_RABBITMQ_HOST: rabbit-mq
      SPRING_ZIPKIN_SENDER_TYPE: rabbit
      SPRING.DATASOURCE.URL: jdbc:postgresql://postgres-book:5439/book_service
      SPRING.DATASOURCE.USERNAME: postgres
      SPRING.DATASOURCE.PASSWORD: postgres
      SPRING.FLYWAY.URL: jdbc:postgresql://postgres-book:5439/book_service
      SPRING.FLYWAY.USER: postgres
      SPRING.FLYWAY.PASSWORD: postgres
    ports:
      - 8100:8100
    depends_on:
      - naming-server
      - postgres-book
      - rabbit-mq
    networks:
      - microservices-network

  apigateway-service:
    image: rangeldiego/06-api-gateway:0.0.1-SNAPSHOT
    container_name: 'apigateway-service'
    ports:
      - 8765:8765
    depends_on:
      - naming-service
    environment:
      EUREKA.CLIENTE.SERVICEURL.DEFAULTZONE: http://naming-service:8761/eureka
      SPRING.ZIPKIN.BASEURL: http://zipkin-server:9411/
      RABBIT_URI: anqp://guest:guest@rabbit-mq:5672
      SPRING_RABBITMQ_HOST: rabbit-mq
      SPRING_ZIPKIN_SENDER_TYPE: rabbit
    networks:
      - microservices-network


networks:
  microservices-network:
    driver: bridge

    # Executar o comando abaixo dentro do projeto para gerar a imagem
    # mvn spring-boot:build-image -DskipTests


# version: '3.4'

# services:
#   zipkin-server:
#     image: openzipkin/zipkin:2.23.2
#     ports:
#       - 9411:9411
#     restart: always
#     depends_on:
#       - rabbit-mq
#     environment:
#       RABBIT_URI: amqp://guest:guest@rabbit-mq:5672
#     networks:
#       - erudio-network

#   rabbit-mq:
#     image: rabbitmq:3.8.14-management
#     ports:
#       - 5672:5672
#       - 15672:15672
#     networks:
#       - erudio-network

#   cambio-db:
#     image: mysql:5.7.22
#     command: --default-authentication-plugin=mysql_native_password
#     restart: always
#     environment:
#       TZ: America/Sao_Paulo
#       MYSQL_ROOT_PASSWORD: admin123
#       MYSQL_USER: docker
#       MYSQL_PASSWORD: admin123
#       MYSQL_DATABASE: cambio_service
#       MYSQL_ROOT_HOST: '%'
#       MYSQL_TCP_PORT: 3308
#     ports:
#       - 3308:3308
#     expose:
#       - 3308
#     networks:
#       - erudio-network
      
#   book-db:
#     image: mysql:5.7.22
#     command: --default-authentication-plugin=mysql_native_password
#     restart: always
#     environment:
#       TZ: America/Sao_Paulo
#       MYSQL_ROOT_PASSWORD: admin123
#       MYSQL_USER: docker
#       MYSQL_PASSWORD: admin123
#       MYSQL_DATABASE: book_service
#       MYSQL_ROOT_HOST: '%'
#       MYSQL_TCP_PORT: 3310
#     ports:
#       - 3310:3310
#     expose:
#       - 3310
#     networks:
#       - erudio-network

#   naming-server:
#     image: leandrocgsi/naming-server:0.0.1-SNAPSHOT
#     ports:
#       - 8761:8761
#     networks:
#       - erudio-network

#   api-gateway:
#     image: leandrocgsi/api-gateway:0.0.1-SNAPSHOT
#     ports:
#       - 8765:8765
#     depends_on:
#       - naming-server
#       - rabbit-mq
#     environment:
#       EUREKA.CLIENT.SERVICEURL.DEFAULTZONE: http://naming-server:8761/eureka
#       SPRING.ZIPKIN.BASEURIO: http://zipkin-server:9411/
#       RABBIT_URI: amqp://guest:guest@rabbit-mq:5672
#       SPRING_RABBITMQ_HOST: rabbit-mq
#       SPRING_ZIPKIN_SENDER_TYPE: rabbit
#     networks:
#       - erudio-network

#   cambio-service:
#     image: leandrocgsi/cambio-service
#     restart: always
#     build:
#       context: .
#       dockerfile: 10-cambio-service/Dockerfile
#     environment:
#       TZ: America/Sao_Paulo
#       EUREKA.CLIENT.SERVICEURL.DEFAULTZONE: http://naming-server:8761/eureka
#       SPRING.ZIPKIN.BASEURL: http://zipkin-server:9411/
#       RABBIT_URI: amqp://guest:guest@rabbit-mq:5672
#       SPRING_RABBITMQ_HOST: rabbit-mq
#       SPRING_ZIPKIN_SENDER_TYPE: rabbit
#       SPRING.DATASOURCE.URL: jdbc:mysql://cambio-db:3308/cambio_service?useSSL=false&serverTimezone=UTC&enabledTLSProtocols=TLSv1.2
#       SPRING.DATASOURCE.USERNAME: root
#       SPRING.DATASOURCE.PASSWORD: admin123
#       SPRING.FLYWAY.URL: jdbc:mysql://cambio-db:3308/cambio_service?useSSL=false&serverTimezone=UTC&enabledTLSProtocols=TLSv1.2
#       SPRING.FLYWAY.USER: root
#       SPRING.FLYWAY.PASSWORD: admin123
#     ports:
#       - 8000:8000
#     depends_on:
#       - naming-server
#       - cambio-db
#       - rabbit-mq
#     networks:
#       - erudio-network
      
#   book-service:
#     image: leandrocgsi/book-service
#     restart: always
#     build:
#       context: .
#       dockerfile: 10-book-service/Dockerfile
#     environment:
#       TZ: America/Sao_Paulo
#       EUREKA.CLIENT.SERVICEURL.DEFAULTZONE: http://naming-server:8761/eureka
#       SPRING.ZIPKIN.BASEURL: http://zipkin-server:9411/
#       RABBIT_URI: amqp://guest:guest@rabbit-mq:5672
#       SPRING_RABBITMQ_HOST: rabbit-mq
#       SPRING_ZIPKIN_SENDER_TYPE: rabbit
#       SPRING.DATASOURCE.URL: jdbc:mysql://book-db:3310/book_service?useSSL=false&serverTimezone=UTC&enabledTLSProtocols=TLSv1.2
#       SPRING.DATASOURCE.USERNAME: root
#       SPRING.DATASOURCE.PASSWORD: admin123
#       SPRING.FLYWAY.URL: jdbc:mysql://book-db:3310/book_service?useSSL=false&serverTimezone=UTC&enabledTLSProtocols=TLSv1.2
#       SPRING.FLYWAY.USER: root
#       SPRING.FLYWAY.PASSWORD: admin123
#     ports:
#       - 8100:8100
#     depends_on:
#       - naming-server
#       - book-db
#       - rabbit-mq
#     networks:
#       - erudio-network
# networks:
#   erudio-network:
#     driver: bridge